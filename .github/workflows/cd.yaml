name: CD Pipeline


on:
  push:
    branches:
      - "**" # matches every branch
# on:
#   workflow_run:
#     workflows: ["CI pipeline"]
#     types: 
#       - completed

permissions:
  id-token: write
  checks: read
  contents: read

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Wait for CI to succeed
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          check-name: 'Run Test'
          repo-token: ${{ secrets.TOKEN_SECRET }}
          wait-interval: 10

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::340752803932:role/github-action
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - uses: yumafuu/docker-build-ecr-push-action@v1
        with:
          aws_role_arn: arn:aws:iam::340752803932:role/github-action
          aws_region: eu-central-1
          ecr_repo: sample-repo
          tag: v1



      # - name: checkout repository
      #   uses: actions/checkout@v2
      
      # - name: setting up python environment
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: "3.9.0"
      
      # - name: install dependencies
      #   run: pip install -r requirements.txt

      # - name: Running isort checks
      #   run: isort --check-only  .

      # - name: Running flake8 checks
      #   run: flake8 .
      
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ vars.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
        
      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest